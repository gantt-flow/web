{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/diegosalinas/Documents/Proyecto%20Modular/web/client/src/services/api.tsx"],"sourcesContent":["'use client';\n\nimport axios from 'axios';\n\n// Variable definida en .env.local\nconst baseURL = process.env.NEXT_PUBLIC_BACKEND_URL;\n\nif (!baseURL) {\n  throw new Error('La variable de entorno NEXT_PUBLIC_BACKEND_URL no está definida.');\n}\n\n// Crea una instancia de Axios con una configuración base\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true\n});\n\nexport default api;"],"names":[],"mappings":";;;AAKgB;AAHhB;AAFA;;AAIA,kCAAkC;AAClC,MAAM;AAEN;;AAIA,yDAAyD;AACzD,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;IACA,iBAAiB;AACnB;uCAEe","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///Users/diegosalinas/Documents/Proyecto%20Modular/web/client/src/services/authService.tsx"],"sourcesContent":["import api from '@/services/api';\n\n// Definimos una interfaz para las credenciales de inicio de sesión\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\n/**\n * Realiza una petición de login al backend.\n * @param credentials El objeto con el email y la contraseña del usuario.\n * @returns Una promesa que resuelve con la respuesta del servidor.\n */\nexport const login = async (credentials: LoginCredentials) => {\n  // Aquí es donde ocurre la llamada a la API\n  const response = await api.post('/auth/login', credentials);\n  return response.data;\n};\n\nexport interface SignUpData {\n  email: string;\n  password: string;\n  name: string;\n  role: string;\n  // profilePicture: File | null;\n  projectId?: string;\n}\n\n/**\n * Realiza una petición de registro al backend.\n * @param data El objeto con los datos necesarios para el registro.\n */\nexport const signUp = async (signUpData: SignUpData) => {\n  const response = await api.post('auth/signUp', signUpData);\n  return response.data;\n}\n\n/**\n * Realiza el registro y, si es exitoso, inicia sesión automáticamente.\n * @param signUpData Los datos del nuevo usuario.\n */\nexport const registerAndLogin = async (signUpData: SignUpData) => {\n  // 1. Llama al servicio de registro\n  await signUp(signUpData);\n  \n  // 2. Si el registro es exitoso, usa las mismas credenciales para iniciar sesión automáticamente\n  const credentials = {\n    email: signUpData.email,\n    password: signUpData.password,\n  };\n  await login(credentials);\n};\n\nexport const logout = async () => {\n  await api.post('/auth/logout');\n};"],"names":[],"mappings":";;;;;;AAAA;;AAaO,MAAM,QAAQ,OAAO;IAC1B,2CAA2C;IAC3C,MAAM,WAAW,MAAM,0HAAA,CAAA,UAAG,CAAC,IAAI,CAAC,eAAe;IAC/C,OAAO,SAAS,IAAI;AACtB;AAeO,MAAM,SAAS,OAAO;IAC3B,MAAM,WAAW,MAAM,0HAAA,CAAA,UAAG,CAAC,IAAI,CAAC,eAAe;IAC/C,OAAO,SAAS,IAAI;AACtB;AAMO,MAAM,mBAAmB,OAAO;IACrC,mCAAmC;IACnC,MAAM,OAAO;IAEb,gGAAgG;IAChG,MAAM,cAAc;QAClB,OAAO,WAAW,KAAK;QACvB,UAAU,WAAW,QAAQ;IAC/B;IACA,MAAM,MAAM;AACd;AAEO,MAAM,SAAS;IACpB,MAAM,0HAAA,CAAA,UAAG,CAAC,IAAI,CAAC;AACjB","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/diegosalinas/Documents/Proyecto%20Modular/web/client/src/app/auth/signUp/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from \"react\";\nimport { useRouter } from 'next/navigation';\nimport { registerAndLogin } from '@/services/authService';\nimport Image from \"next/image\";\n\n// Roles\nconst userRoles = ['Administrador de proyectos', 'Miembro de equipo', 'Colaborador', 'Cliente', 'Auditor'];\n\nexport default function SignUpPage() {\n    const [step, setStep] = useState(1);\n    \n    // Estado para los campos controlados\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        passwordConfirm: '',\n        name: '',\n        role: '',\n        projectId: ''\n    });\n\n    const [error, setError] = useState('');\n    const router = useRouter();\n\n    const { email, password, passwordConfirm, name, role, projectId } = formData;\n\n    // Maneja los cambios de los inputs de texto y el select\n    const handleControlledChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleNextStep = (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n\n        if (step === 1) {\n            if (!email || !password || !passwordConfirm) {\n                setError('Por favor, completa todos los campos.');\n                return;\n            }\n            if (password !== passwordConfirm) {\n                setError('Las contraseñas no coinciden.');\n                return;\n            }\n            setStep(2);\n        }\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!name || !role) {\n            setError('Nombre y tipo de usuario son obligatorios.');\n            return;\n        }\n\n        try {\n            // El servicio de autenticación necesitará ser modificado para manejar archivos\n            // Por ahora, solo pasamos los datos del formulario, excluyendo la foto\n            await registerAndLogin({ email, password, name, role, projectId });\n            router.push('/inicio');\n        } catch (err: any) {\n            console.error(err);\n            const errorMessage = err.response?.data?.message || 'Error en el registro. Por favor, intenta de nuevo.';\n            setError(errorMessage);\n        }\n    };\n\n    const renderForm = () => {\n        if (step === 1) {\n            return (\n                <form className=\"flex flex-col mt-6\" onSubmit={handleNextStep}>\n                    {error && <p className=\"text-red-500 mb-6\">{error}</p>}\n                    <label htmlFor=\"email\">Correo</label>\n                    <input type=\"email\" name=\"email\" value={email || ''} onChange={handleControlledChange} className=\"border border-gray-300 rounded-lg p-3 mb-4\" required />\n\n                    <label htmlFor=\"password\">Contraseña</label>\n                    <input type=\"password\" name=\"password\" value={password || ''} onChange={handleControlledChange} className=\"border border-gray-300 rounded-lg p-3 mb-4\" required /> \n\n                    <label htmlFor=\"passwordConfirm\">Confirmar Contraseña</label>\n                    <input type=\"password\" name=\"passwordConfirm\" value={passwordConfirm || ''} onChange={handleControlledChange} className=\"border border-gray-300 rounded-lg p-3 mb-8\" required />\n\n                    <button type=\"submit\" className=\"bg-green-500 text-white p-2 h-12 rounded-lg hover:bg-green-600\">Siguiente</button>\n                </form>\n            );\n        } else {\n            return (\n                <form className=\"flex flex-col mt-6\" onSubmit={handleSubmit}>\n                    {error && <p className=\"text-red-500 mb-6\">{error}</p>}\n                    <label htmlFor=\"name\">Nombre</label>\n                    <input type=\"text\" name=\"name\" value={name || ''} onChange={handleControlledChange} className=\"border border-gray-300 rounded-lg p-3 mb-4\" required /> \n\n                    <label htmlFor=\"role\">Tipo de Usuario</label>\n                    <select name=\"role\" value={role || ''} onChange={handleControlledChange} className=\"border border-gray-300 rounded-lg p-3 mb-4\" required> \n                        <option value=''>Selecciona un rol</option>\n                        {userRoles.map(r => (\n                            <option key={r} value={r}>{r}</option>\n                        ))}\n                    </select>\n                    \n                    <label htmlFor=\"projectId\">Código de Invitación (opcional)</label>\n                    <input type=\"text\" name=\"projectId\" value={projectId || ''} onChange={handleControlledChange} className=\"border border-gray-300 rounded-lg p-3 mb-8\" /> \n\n                    <button type=\"submit\" className=\"bg-green-500 text-white p-2 h-12 rounded-lg hover:bg-green-600\">Registrarme</button>\n                </form>\n            );\n        }\n    };\n\n\n    return (\n        <div className=\"flex flex-row h-screen\">\n\n            <div className=\"flex flex-col basis-1/2\">\n                <div className=\"flex flex-col w-2/3 self-center mt-30\">\n                    <h1 className=\"text-[36px]\">\n                        {step === 1 ? 'Crea tus credenciales' : 'Completa tu perfil'}\n                    </h1>\n                    {renderForm()}\n                </div>\n                <p className=\"mt-8 text-center\">\n                    {/* NOTA: Este enlace apunta a la misma página de registro, quizás debería ir a una página de \"recuperar contraseña\" */}\n                    <a href=\"/auth/forgot-password\" className=\"hover:underline\">¿Olvidaste tu contraseña?</a>\n                </p>\n                <p className=\"mt-4 text-center\">\n                    ¿Ya tienes una cuenta? <a href=\"/auth/login\" className=\"hover:underline\">Inicia sesión aquí</a>\n                </p>\n            </div>\n\n            <div className=\"flex flex-col basis-1/2 bg-green-500\">\n                <div className=\"flex flex-col self-center mt-30\">\n                    <Image\n                        className=\"dark:invert\"\n                        src=\"/ganttFlowWhite.svg\"\n                        alt=\"Gantt Logo\"\n                        width={346}\n                        height={77}\n                        priority\n                    />\n                </div>\n                <p className=\"mt-30 text-center text-white text-[30px] w-2/3 self-center\">La solución que necesitas para tu proyecto</p>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOA,QAAQ;AACR,MAAM,YAAY;IAAC;IAA8B;IAAqB;IAAe;IAAW;CAAU;AAE3F,SAAS;;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,qCAAqC;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACrC,OAAO;QACP,UAAU;QACV,iBAAiB;QACjB,MAAM;QACN,MAAM;QACN,WAAW;IACf;IAEA,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG;IAEpE,wDAAwD;IACxD,MAAM,yBAAyB,CAAC;QAC5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,KAAK,EAAE;QAAM;IAC7C;IAEA,MAAM,iBAAiB,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS;QAET,IAAI,SAAS,GAAG;YACZ,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,iBAAiB;gBACzC,SAAS;gBACT;YACJ;YACA,IAAI,aAAa,iBAAiB;gBAC9B,SAAS;gBACT;YACJ;YACA,QAAQ;QACZ;IACJ;IAEA,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAEhB,IAAI,CAAC,QAAQ,CAAC,MAAM;YAChB,SAAS;YACT;QACJ;QAEA,IAAI;YACA,+EAA+E;YAC/E,uEAAuE;YACvE,MAAM,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE;gBAAE;gBAAO;gBAAU;gBAAM;gBAAM;YAAU;YAChE,OAAO,IAAI,CAAC;QAChB,EAAE,OAAO,KAAU;gBAEM,oBAAA;YADrB,QAAQ,KAAK,CAAC;YACd,MAAM,eAAe,EAAA,gBAAA,IAAI,QAAQ,cAAZ,qCAAA,qBAAA,cAAc,IAAI,cAAlB,yCAAA,mBAAoB,OAAO,KAAI;YACpD,SAAS;QACb;IACJ;IAEA,MAAM,aAAa;QACf,IAAI,SAAS,GAAG;YACZ,qBACI,6LAAC;gBAAK,WAAU;gBAAqB,UAAU;;oBAC1C,uBAAS,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAC5C,6LAAC;wBAAM,SAAQ;kCAAQ;;;;;;kCACvB,6LAAC;wBAAM,MAAK;wBAAQ,MAAK;wBAAQ,OAAO,SAAS;wBAAI,UAAU;wBAAwB,WAAU;wBAA6C,QAAQ;;;;;;kCAEtJ,6LAAC;wBAAM,SAAQ;kCAAW;;;;;;kCAC1B,6LAAC;wBAAM,MAAK;wBAAW,MAAK;wBAAW,OAAO,YAAY;wBAAI,UAAU;wBAAwB,WAAU;wBAA6C,QAAQ;;;;;;kCAE/J,6LAAC;wBAAM,SAAQ;kCAAkB;;;;;;kCACjC,6LAAC;wBAAM,MAAK;wBAAW,MAAK;wBAAkB,OAAO,mBAAmB;wBAAI,UAAU;wBAAwB,WAAU;wBAA6C,QAAQ;;;;;;kCAE7K,6LAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAiE;;;;;;;;;;;;QAG7G,OAAO;YACH,qBACI,6LAAC;gBAAK,WAAU;gBAAqB,UAAU;;oBAC1C,uBAAS,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAC5C,6LAAC;wBAAM,SAAQ;kCAAO;;;;;;kCACtB,6LAAC;wBAAM,MAAK;wBAAO,MAAK;wBAAO,OAAO,QAAQ;wBAAI,UAAU;wBAAwB,WAAU;wBAA6C,QAAQ;;;;;;kCAEnJ,6LAAC;wBAAM,SAAQ;kCAAO;;;;;;kCACtB,6LAAC;wBAAO,MAAK;wBAAO,OAAO,QAAQ;wBAAI,UAAU;wBAAwB,WAAU;wBAA6C,QAAQ;;0CACpI,6LAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,UAAU,GAAG,CAAC,CAAA,kBACX,6LAAC;oCAAe,OAAO;8CAAI;mCAAd;;;;;;;;;;;kCAIrB,6LAAC;wBAAM,SAAQ;kCAAY;;;;;;kCAC3B,6LAAC;wBAAM,MAAK;wBAAO,MAAK;wBAAY,OAAO,aAAa;wBAAI,UAAU;wBAAwB,WAAU;;;;;;kCAExG,6LAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAiE;;;;;;;;;;;;QAG7G;IACJ;IAGA,qBACI,6LAAC;QAAI,WAAU;;0BAEX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CACT,SAAS,IAAI,0BAA0B;;;;;;4BAE3C;;;;;;;kCAEL,6LAAC;wBAAE,WAAU;kCAET,cAAA,6LAAC;4BAAE,MAAK;4BAAwB,WAAU;sCAAkB;;;;;;;;;;;kCAEhE,6LAAC;wBAAE,WAAU;;4BAAmB;0CACL,6LAAC;gCAAE,MAAK;gCAAc,WAAU;0CAAkB;;;;;;;;;;;;;;;;;;0BAIjF,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACF,WAAU;4BACV,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,QAAQ;;;;;;;;;;;kCAGhB,6LAAC;wBAAE,WAAU;kCAA6D;;;;;;;;;;;;;;;;;;AAI1F;GAzIwB;;QAcL,qIAAA,CAAA,YAAS;;;KAdJ","debugId":null}}]
}